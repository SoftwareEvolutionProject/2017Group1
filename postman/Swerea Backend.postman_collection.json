{
	"info": {
		"name": "Swerea Backend",
		"_postman_id": "21f077c8-d35e-84f0-c5b2-4cad563e823f",
		"description": "# Introduction\nREST-API for the Swerea backend\n\n# Overview\nThings that the developers should know about\n\n# Authentication\nWhat is the preferred way of using the API?\n\n# Error Codes\nWhat errors and status codes can a user expect?\n\n# Rate limit\nIs there a limit to the number of requests an user can send?",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "CustomerAPI",
			"description": "",
			"item": [
				{
					"name": "Get All Customers",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{domain}}/customers",
							"host": [
								"{{domain}}"
							],
							"path": [
								"customers"
							]
						},
						"description": ""
					},
					"response": [
						{
							"id": "8f1fefc4-5df1-4407-bbbe-9927fbebdb6e",
							"name": "Get All Customers",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {},
								"url": {
									"raw": "{{domain}}/customers",
									"host": [
										"{{domain}}"
									],
									"path": [
										"customers"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"_postman_previewtype": "text",
							"header": [
								{
									"key": "Access-Control-Allow-Headers",
									"value": "*",
									"name": "Access-Control-Allow-Headers",
									"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*",
									"name": "Access-Control-Allow-Origin",
									"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
								},
								{
									"key": "Access-Control-Request-Method",
									"value": "*",
									"name": "Access-Control-Request-Method",
									"description": "Used when issuing a preflight request to let the server know what HTTP method will be used when the actual request is made."
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Tue, 21 Nov 2017 22:29:32 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Jetty(9.4.4.v20170414)",
									"name": "Server",
									"description": "A name for the server"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked",
									"name": "Transfer-Encoding",
									"description": "The form of encoding used to safely transfer the entity to the user. Currently defined methods are: chunked, compress, deflate, gzip, identity."
								}
							],
							"cookie": [],
							"responseTime": 44,
							"body": "[{\"id\":1,\"name\":\"Testbolag\",\"eMail\":\"test@testbolag.se\"},{\"id\":2,\"name\":\"Chalmers n Stuff\",\"eMail\":\"gangsters@tjalmers.se\"}]"
						}
					]
				},
				{
					"name": "Get Customers",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{domain}}/customers/{{customerID}}",
							"host": [
								"{{domain}}"
							],
							"path": [
								"customers",
								"{{customerID}}"
							]
						},
						"description": ""
					},
					"response": [
						{
							"id": "86fb371d-af68-4cf4-b658-fc6fba49a056",
							"name": "Get Customers",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {},
								"url": {
									"raw": "{{domain}}/customers/{{customerID}}",
									"host": [
										"{{domain}}"
									],
									"path": [
										"customers",
										"{{customerID}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"_postman_previewtype": "text",
							"header": [
								{
									"key": "Access-Control-Allow-Headers",
									"value": "*",
									"name": "Access-Control-Allow-Headers",
									"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*",
									"name": "Access-Control-Allow-Origin",
									"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
								},
								{
									"key": "Access-Control-Request-Method",
									"value": "*",
									"name": "Access-Control-Request-Method",
									"description": "Used when issuing a preflight request to let the server know what HTTP method will be used when the actual request is made."
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Tue, 21 Nov 2017 22:29:45 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Jetty(9.4.4.v20170414)",
									"name": "Server",
									"description": "A name for the server"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked",
									"name": "Transfer-Encoding",
									"description": "The form of encoding used to safely transfer the entity to the user. Currently defined methods are: chunked, compress, deflate, gzip, identity."
								}
							],
							"cookie": [],
							"responseTime": 29,
							"body": "{\"id\":1,\"name\":\"Testbolag\",\"eMail\":\"test@testbolag.se\"}"
						}
					]
				},
				{
					"name": "Get Digital-parts of Customer",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{domain}}/customers/{{customerID}}/digital-parts",
							"host": [
								"{{domain}}"
							],
							"path": [
								"customers",
								"{{customerID}}",
								"digital-parts"
							]
						},
						"description": "Get Digital parts belonging to a customer"
					},
					"response": [
						{
							"id": "3bdef144-07e3-49ed-8578-0dbfb32f8ec2",
							"name": "Get Digital-parts of Customer",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {},
								"url": {
									"raw": "{{domain}}/customers/{{customerID}}/digital-parts",
									"host": [
										"{{domain}}"
									],
									"path": [
										"customers",
										"{{customerID}}",
										"digital-parts"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"_postman_previewtype": "text",
							"header": [
								{
									"key": "Access-Control-Allow-Headers",
									"value": "*",
									"name": "Access-Control-Allow-Headers",
									"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*",
									"name": "Access-Control-Allow-Origin",
									"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
								},
								{
									"key": "Access-Control-Request-Method",
									"value": "*",
									"name": "Access-Control-Request-Method",
									"description": "Used when issuing a preflight request to let the server know what HTTP method will be used when the actual request is made."
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Tue, 21 Nov 2017 22:29:54 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Jetty(9.4.4.v20170414)",
									"name": "Server",
									"description": "A name for the server"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked",
									"name": "Transfer-Encoding",
									"description": "The form of encoding used to safely transfer the entity to the user. Currently defined methods are: chunked, compress, deflate, gzip, identity."
								}
							],
							"cookie": [],
							"responseTime": 24,
							"body": "[{\"id\":1,\"customerID\":1,\"name\":\"Screw\"},{\"id\":2,\"customerID\":1,\"name\":\"Hinge\"}]"
						}
					]
				},
				{
					"name": "Get Orders of Customer",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{domain}}/customers/{{customerID}}/orders",
							"host": [
								"{{domain}}"
							],
							"path": [
								"customers",
								"{{customerID}}",
								"orders"
							]
						},
						"description": ""
					},
					"response": [
						{
							"id": "ffe8eda8-9a08-4fef-8ac1-7fe11f01a24c",
							"name": "Get Orders of Customer",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {},
								"url": {
									"raw": "{{domain}}/customers/{{customerID}}/orders",
									"host": [
										"{{domain}}"
									],
									"path": [
										"customers",
										"{{customerID}}",
										"orders"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"_postman_previewtype": "text",
							"header": [
								{
									"key": "Access-Control-Allow-Headers",
									"value": "*",
									"name": "Access-Control-Allow-Headers",
									"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*",
									"name": "Access-Control-Allow-Origin",
									"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
								},
								{
									"key": "Access-Control-Request-Method",
									"value": "*",
									"name": "Access-Control-Request-Method",
									"description": "Used when issuing a preflight request to let the server know what HTTP method will be used when the actual request is made."
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Tue, 21 Nov 2017 22:30:01 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Jetty(9.4.4.v20170414)",
									"name": "Server",
									"description": "A name for the server"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked",
									"name": "Transfer-Encoding",
									"description": "The form of encoding used to safely transfer the entity to the user. Currently defined methods are: chunked, compress, deflate, gzip, identity."
								}
							],
							"cookie": [],
							"responseTime": 9,
							"body": "[{\"id\":1,\"customerID\":1,\"date\":\"2017-10-10\"},{\"id\":2,\"customerID\":1,\"date\":\"2017-11-23\"}]"
						}
					]
				},
				{
					"name": "New Customer",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Successful POST request\"] = responseCode.code === 201 || responseCode.code === 202;"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\":\"Lol2kpe Productions\",\n  \"eMail\":\"wannabe@lol2kpe.com\"\n}"
						},
						"url": {
							"raw": "{{domain}}/customers",
							"host": [
								"{{domain}}"
							],
							"path": [
								"customers"
							]
						},
						"description": ""
					},
					"response": [
						{
							"id": "3cf49e20-f7a1-48c9-b694-2ca5c0048839",
							"name": "New Customer",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\":\"Lol2kpe Productions\",\n  \"eMail\":\"wannabe@lol2kpe.com\"\n}"
								},
								"url": {
									"raw": "{{domain}}/customers",
									"host": [
										"{{domain}}"
									],
									"path": [
										"customers"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"_postman_previewtype": "text",
							"header": [
								{
									"key": "Access-Control-Allow-Headers",
									"value": "*",
									"name": "Access-Control-Allow-Headers",
									"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*",
									"name": "Access-Control-Allow-Origin",
									"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
								},
								{
									"key": "Access-Control-Request-Method",
									"value": "*",
									"name": "Access-Control-Request-Method",
									"description": "Used when issuing a preflight request to let the server know what HTTP method will be used when the actual request is made."
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Tue, 21 Nov 2017 22:30:09 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Jetty(9.4.4.v20170414)",
									"name": "Server",
									"description": "A name for the server"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked",
									"name": "Transfer-Encoding",
									"description": "The form of encoding used to safely transfer the entity to the user. Currently defined methods are: chunked, compress, deflate, gzip, identity."
								}
							],
							"cookie": [],
							"responseTime": 10,
							"body": "{\"id\":3,\"name\":\"Lol2kpe Productions\",\"eMail\":\"wannabe@lol2kpe.com\"}"
						}
					]
				},
				{
					"name": "Edit Customer",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\":{{customerID}},\n  \"name\":\"Edited Company\",\n  \"eMail\":\"wannabe@editco.com\"\n}"
						},
						"url": {
							"raw": "{{domain}}/customers/{{customerID}}",
							"host": [
								"{{domain}}"
							],
							"path": [
								"customers",
								"{{customerID}}"
							]
						},
						"description": ""
					},
					"response": [
						{
							"id": "1de9f08e-5e61-444c-b85e-1c74c5d95dd9",
							"name": "Edit Customer",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\":{{customerID}},\n  \"name\":\"Edited Company\",\n  \"eMail\":\"wannabe@editco.com\"\n}"
								},
								"url": {
									"raw": "{{domain}}/customers/{{customerID}}",
									"host": [
										"{{domain}}"
									],
									"path": [
										"customers",
										"{{customerID}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"_postman_previewtype": "text",
							"header": [
								{
									"key": "Access-Control-Allow-Headers",
									"value": "*",
									"name": "Access-Control-Allow-Headers",
									"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*",
									"name": "Access-Control-Allow-Origin",
									"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
								},
								{
									"key": "Access-Control-Request-Method",
									"value": "*",
									"name": "Access-Control-Request-Method",
									"description": "Used when issuing a preflight request to let the server know what HTTP method will be used when the actual request is made."
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Tue, 21 Nov 2017 22:30:18 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Jetty(9.4.4.v20170414)",
									"name": "Server",
									"description": "A name for the server"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked",
									"name": "Transfer-Encoding",
									"description": "The form of encoding used to safely transfer the entity to the user. Currently defined methods are: chunked, compress, deflate, gzip, identity."
								}
							],
							"cookie": [],
							"responseTime": 20,
							"body": "{\"id\":1,\"name\":\"Edited Company\",\"eMail\":\"wannabe@editco.com\"}"
						}
					]
				},
				{
					"name": "Delete customer",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{domain}}/customers/{{customerID}}",
							"host": [
								"{{domain}}"
							],
							"path": [
								"customers",
								"{{customerID}}"
							]
						},
						"description": "Removes a customer from the system"
					},
					"response": [
						{
							"id": "12cd5d82-2351-4824-86c8-b7e691af1784",
							"name": "Delete customer",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"body": {},
								"url": {
									"raw": "{{domain}}/customers/{{customerID}}",
									"host": [
										"{{domain}}"
									],
									"path": [
										"customers",
										"{{customerID}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"_postman_previewtype": "text",
							"header": [
								{
									"key": "Access-Control-Allow-Headers",
									"value": "*",
									"name": "Access-Control-Allow-Headers",
									"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*",
									"name": "Access-Control-Allow-Origin",
									"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
								},
								{
									"key": "Access-Control-Request-Method",
									"value": "*",
									"name": "Access-Control-Request-Method",
									"description": "Used when issuing a preflight request to let the server know what HTTP method will be used when the actual request is made."
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Tue, 21 Nov 2017 22:30:24 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Jetty(9.4.4.v20170414)",
									"name": "Server",
									"description": "A name for the server"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked",
									"name": "Transfer-Encoding",
									"description": "The form of encoding used to safely transfer the entity to the user. Currently defined methods are: chunked, compress, deflate, gzip, identity."
								}
							],
							"cookie": [],
							"responseTime": 26,
							"body": "\"1\""
						}
					]
				}
			]
		},
		{
			"name": "OrderAPI",
			"description": "",
			"item": [
				{
					"name": "Get Orders",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{domain}}/orders",
							"host": [
								"{{domain}}"
							],
							"path": [
								"orders"
							]
						},
						"description": "Get all orders in the system"
					},
					"response": []
				},
				{
					"name": "Get specific order",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{domain}}/orders/{{orderID}}",
							"host": [
								"{{domain}}"
							],
							"path": [
								"orders",
								"{{orderID}}"
							]
						},
						"description": "Get order given an ID"
					},
					"response": []
				},
				{
					"name": "Create Order",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201,202]);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n        \"customerID\": 1,\n        \"date\": \"2017-14-13\",\n        \"orderedParts\": [\n            {\n                \"orderID\": 1,\n                \"digitalPartID\": 1,\n                \"amount\": 2\n            }\n        ]\n    }"
						},
						"url": {
							"raw": "{{domain}}/orders",
							"host": [
								"{{domain}}"
							],
							"path": [
								"orders"
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Edit Order",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": 1,\n    \"customerID\": 1,\n    \"date\": \"2017-10-11\",\n    \"orderedParts\": [\n        {\n            \"id\": 1,\n            \"orderID\": 1,\n            \"amount\": 20\n        },\n        {\n            \"id\": 5,\n            \"orderID\": 1,\n            \"amount\": 20\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{domain}}/orders/{{orderID}}",
							"host": [
								"{{domain}}"
							],
							"path": [
								"orders",
								"{{orderID}}"
							]
						},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "PrintingAPI",
			"description": "",
			"item": [
				{
					"name": "Get specific digital print",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{domain}}/digital-prints/{{digitalPrintID}}",
							"host": [
								"{{domain}}"
							],
							"path": [
								"digital-prints",
								"{{digitalPrintID}}"
							]
						},
						"description": "Get all digital prints"
					},
					"response": []
				},
				{
					"name": "Get digital prints",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{domain}}/digital-prints/{{digitalPrintID}}",
							"host": [
								"{{domain}}"
							],
							"path": [
								"digital-prints",
								"{{digitalPrintID}}"
							]
						},
						"description": "Get all digital prints"
					},
					"response": []
				},
				{
					"name": "Create Digital Print",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Successful POST request\"] = responseCode.code === 201 || responseCode.code === 202;",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n        \n        \"name\": \"NewName\",\n        \"magicsPartPairing\": {\n            \"HingeNStuff\": 2,\n            \"ScrewToStuff\": 1,\n            \"ScrewToOtherStuff\": 1\n        }\n    }"
						},
						"url": {
							"raw": "{{domain}}/digital-prints",
							"host": [
								"{{domain}}"
							],
							"path": [
								"digital-prints"
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Upload magics file",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "file",
							"file": {
								"src": ""
							}
						},
						"url": {
							"raw": "{{domain}}/digital-prints/{{digitalPrintID}}/magics",
							"host": [
								"{{domain}}"
							],
							"path": [
								"digital-prints",
								"{{digitalPrintID}}",
								"magics"
							]
						},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "DigitalPartsAPI",
			"description": "",
			"item": [
				{
					"name": "Get Digital Parts",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{domain}}/digital-parts",
							"host": [
								"{{domain}}"
							],
							"path": [
								"digital-parts"
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Get Specific Digital Part",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{domain}}/digital-parts/{{digitalPartID}}",
							"host": [
								"{{domain}}"
							],
							"path": [
								"digital-parts",
								"{{digitalPartID}}"
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Create Digital Part",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Successful POST request\"] = responseCode.code === 201 || responseCode.code === 202;"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "  {\n        \"customerID\": 1,\n        \"name\": \"Stick Figure\"\n    }"
						},
						"url": {
							"raw": "{{domain}}/digital-parts",
							"host": [
								"{{domain}}"
							],
							"path": [
								"digital-parts"
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Edit Digital Part",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Successful POST request\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "  {\n    \"id\":1,\n        \"customerID\": 1,\n        \"name\": \"Edited name\"\n    }"
						},
						"url": {
							"raw": "{{domain}}/digital-parts/{{digitalPartID}}",
							"host": [
								"{{domain}}"
							],
							"path": [
								"digital-parts",
								"{{digitalPartID}}"
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Post Stl File",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201,202]);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "file",
							"file": {
								"src": ""
							}
						},
						"url": {
							"raw": "{{domain}}/digital-parts/{{digitalPartID}}/stl",
							"host": [
								"{{domain}}"
							],
							"path": [
								"digital-parts",
								"{{digitalPartID}}",
								"stl"
							]
						},
						"description": "Posting an attached stl file to backend"
					},
					"response": [
						{
							"id": "b42e022d-f7fd-40f7-ae20-a6e37254f4da",
							"name": "Post Stl File",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "file",
									"file": {}
								},
								"url": {
									"raw": "{{domain}}/digital-parts/{{digitalPartID}}/stl",
									"host": [
										"{{domain}}"
									],
									"path": [
										"digital-parts",
										"{{digitalPartID}}",
										"stl"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"_postman_previewtype": "text",
							"header": [
								{
									"key": "Access-Control-Allow-Headers",
									"value": "*",
									"name": "Access-Control-Allow-Headers",
									"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*",
									"name": "Access-Control-Allow-Origin",
									"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
								},
								{
									"key": "Access-Control-Request-Method",
									"value": "*",
									"name": "Access-Control-Request-Method",
									"description": "Used when issuing a preflight request to let the server know what HTTP method will be used when the actual request is made."
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Tue, 21 Nov 2017 22:23:30 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Jetty(9.4.4.v20170414)",
									"name": "Server",
									"description": "A name for the server"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked",
									"name": "Transfer-Encoding",
									"description": "The form of encoding used to safely transfer the entity to the user. Currently defined methods are: chunked, compress, deflate, gzip, identity."
								}
							],
							"cookie": [],
							"responseTime": 16114,
							"body": "{\"id\":2,\"digitalPartID\":2,\"path\":\"/stl/2-1082100546.stl\"}"
						}
					]
				}
			]
		},
		{
			"name": "PhysicalAPI",
			"description": "",
			"item": [
				{
					"name": "Prints",
					"description": "",
					"item": [
						{
							"name": "Get Specific Physical Print",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"body": {},
								"url": {
									"raw": "{{domain}}/physical-prints/{{physicalPrintID}}",
									"host": [
										"{{domain}}"
									],
									"path": [
										"physical-prints",
										"{{physicalPrintID}}"
									]
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Get Physical Print",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"body": {},
								"url": {
									"raw": "{{domain}}/physical-prints",
									"host": [
										"{{domain}}"
									],
									"path": [
										"physical-prints"
									]
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Create Physical Print",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Successful POST request\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([201,202]);",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{ \n    \"digitalPrintID\": 1,\n    \"slmPath\": \"slm/pathTest\"\n}"
								},
								"url": {
									"raw": "{{domain}}/physical-prints",
									"host": [
										"{{domain}}"
									],
									"path": [
										"physical-prints"
									]
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Edit Physical Print",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": 1,\n    \"digitalPrintID\": 1,\n    \"slmPath\": \"slm/editedPath\"\n}"
								},
								"url": {
									"raw": "{{domain}}/physical-prints/{{physicalPrintID}}",
									"host": [
										"{{domain}}"
									],
									"path": [
										"physical-prints",
										"{{physicalPrintID}}"
									]
								},
								"description": ""
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Part",
					"description": "",
					"item": [
						{
							"name": "Get Specific Physical Part",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"body": {},
								"url": {
									"raw": "{{domain}}/physical-parts/{{physicalPartID}}",
									"host": [
										"{{domain}}"
									],
									"path": [
										"physical-parts",
										"{{physicalPartID}}"
									]
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Get Physical Parts",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"body": {},
								"url": {
									"raw": "{{domain}}/physical-parts",
									"host": [
										"{{domain}}"
									],
									"path": [
										"physical-parts"
									]
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Create Physical Part",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Successful POST request\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([201,202]);",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"physicalPrintID\": 1,\n    \"orderedPartID\": 1,\n    \"magicsPartPairingID\": 1\n}"
								},
								"url": {
									"raw": "{{domain}}/physical-parts",
									"host": [
										"{{domain}}"
									],
									"path": [
										"physical-parts"
									]
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Edit Physical Part",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Response time is less than 200ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(200);",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": 1,\n    \"physicalPrintID\": 2,\n    \"orderedPartID\": 1,\n    \"magicsPartPairingID\": \"1\"\n}"
								},
								"url": {
									"raw": "{{domain}}/physical-parts/{{physicalPartID}}",
									"host": [
										"{{domain}}"
									],
									"path": [
										"physical-parts",
										"{{physicalPartID}}"
									]
								},
								"description": ""
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				}
			]
		}
	]
}